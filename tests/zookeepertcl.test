##
##
## zookeepertcl.test - Test the Tcl helpers procs defined in the
##  zookeepertcl package 
##
package require tcltest
namespace import ::tcltest::*

test rmrf {
    Make sure all child paths are deleted recursively
} -body {
    set rootPath [file join / rmrfRoot]
    zk create $rootPath -value root

    for {set i 0} {$i < 10} {incr i} {
	set childLevel1 [file join $rootPath $i]
	zk create $childLevel1

	for {set j 0} {$j < 10} {incr j} {
	    set childLevel2 [file join $childLevel1 $j]
	    zk create $childLevel2 
	}
    }

    zookeeper::rmrf zk $rootPath
    return [zk exists $rootPath]
} -result 0

test mkpath {
    Make sure all paths get created
} -body {
    set paths [file join / root child0 child1 child2 child3 child4]
    zookeeper::mkpath zk $paths
    return [zk exists $paths] 
} -cleanup {
    zookeeper::rmrf zk /root
} -result 1

test copy_data_node_exists_null_data {
    Test that the copy_data proc works when the node has no data
} -body {
    set zpath [file join / zpath]
    zk create $zpath

    zookeeper::copy_data zk newData $zpath

    zk get $zpath -data gData -version gVersion
    return $gData
} -cleanup {
    zk delete $zpath -1
} -result newData

cleanupTests

# vim: set ts=8 sw=4 sts=4 noet :
